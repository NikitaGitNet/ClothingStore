// <auto-generated />
using System;
using ClothingStore.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221206193225_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingStore.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ManufacturerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3927a70-e055-4e6c-a4fa-e10308a78a7d"),
                            ManufacturerCountry = "USA",
                            Name = "Nike"
                        },
                        new
                        {
                            Id = new Guid("f0e9fd9d-67fe-4f99-ace4-7b403c57ab46"),
                            ManufacturerCountry = "Germany",
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = new Guid("7efc9710-ed9f-460c-b29f-617a4a784269"),
                            ManufacturerCountry = "USA",
                            Name = "Ralph Lauren"
                        },
                        new
                        {
                            Id = new Guid("4d89fc13-6268-464f-8ecf-57acc7427b64"),
                            ManufacturerCountry = "Italy",
                            Name = "Stone Island"
                        },
                        new
                        {
                            Id = new Guid("457966e8-26e4-489b-978a-f903a07d3533"),
                            ManufacturerCountry = "France",
                            Name = "Lacoste"
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tariff")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.OnlineOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataOrder")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("OnlineOrders");
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OnlineOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("SizeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OnlineOrderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aef66f8c-f6c5-4f4a-abf2-b31b89c25b51"),
                            BrandId = new Guid("7efc9710-ed9f-460c-b29f-617a4a784269"),
                            Count = 1,
                            Name = "Хлопковая сорочка",
                            Price = 29100f,
                            SizeId = new Guid("74923a8e-621d-4d5a-8980-5985a3983d31")
                        },
                        new
                        {
                            Id = new Guid("93a85753-c130-455f-83ec-6a90d3970d72"),
                            BrandId = new Guid("4d89fc13-6268-464f-8ecf-57acc7427b64"),
                            Count = 5,
                            Name = "Куртка",
                            Price = 30000f,
                            SizeId = new Guid("eecfb6cb-4f7f-4ca8-9dbc-ad18a0fbc7ff")
                        },
                        new
                        {
                            Id = new Guid("80cee191-9b30-4830-9f9f-58cb88057b96"),
                            BrandId = new Guid("457966e8-26e4-489b-978a-f903a07d3533"),
                            Count = 8,
                            Name = "Мужские брюки Sport Fleece Tennis",
                            Price = 12690f,
                            SizeId = new Guid("6650614b-a9ca-4d75-9407-1aa69a826ec1")
                        },
                        new
                        {
                            Id = new Guid("16179e73-8390-432a-8b7c-be073ab6dc12"),
                            BrandId = new Guid("e3927a70-e055-4e6c-a4fa-e10308a78a7d"),
                            Count = 4,
                            Name = "Футболка мужская",
                            Price = 4470f,
                            SizeId = new Guid("6650614b-a9ca-4d75-9407-1aa69a826ec1")
                        },
                        new
                        {
                            Id = new Guid("d6d60425-d2fd-4f8b-8e1b-f7c9def4a7ac"),
                            BrandId = new Guid("f0e9fd9d-67fe-4f99-ace4-7b403c57ab46"),
                            Count = 1,
                            Name = "Мужская олимпийка Adicolor Classics Beckenbauer Primeblue",
                            Price = 7690f,
                            SizeId = new Guid("e3437214-5c5c-411b-84ca-9015f4804e74")
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfSale")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChestCircumference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HipCircumference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaistCircumference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("152d81c0-363c-4f6c-9a17-5a4edd969fd6"),
                            ChestCircumference = "84-88",
                            HipCircumference = "82-86",
                            Name = "44 (XS)",
                            WaistCircumference = "74-78"
                        },
                        new
                        {
                            Id = new Guid("6b4b71e1-ca7f-463e-ac67-16d32e00b0a7"),
                            ChestCircumference = "88-96",
                            HipCircumference = "86-92",
                            Name = "46 (S)",
                            WaistCircumference = "76-84"
                        },
                        new
                        {
                            Id = new Guid("eecfb6cb-4f7f-4ca8-9dbc-ad18a0fbc7ff"),
                            ChestCircumference = "96-102",
                            HipCircumference = "92-98",
                            Name = "48 (M)",
                            WaistCircumference = "82-90"
                        },
                        new
                        {
                            Id = new Guid("74923a8e-621d-4d5a-8980-5985a3983d31"),
                            ChestCircumference = "102-108",
                            HipCircumference = "98-104",
                            Name = "50 (L)",
                            WaistCircumference = "88-96"
                        },
                        new
                        {
                            Id = new Guid("6650614b-a9ca-4d75-9407-1aa69a826ec1"),
                            ChestCircumference = "108-114",
                            HipCircumference = "104-110",
                            Name = "52 (XL)",
                            WaistCircumference = "97-102"
                        },
                        new
                        {
                            Id = new Guid("e3437214-5c5c-411b-84ca-9015f4804e74"),
                            ChestCircumference = "114-120",
                            HipCircumference = "110-116",
                            Name = "54 (XXL)",
                            WaistCircumference = "100-108"
                        });
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.Product", b =>
                {
                    b.HasOne("ClothingStore.Domain.Entities.OnlineOrder", null)
                        .WithMany("Products")
                        .HasForeignKey("OnlineOrderId");
                });

            modelBuilder.Entity("ClothingStore.Domain.Entities.OnlineOrder", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
